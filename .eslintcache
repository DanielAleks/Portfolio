[{"/home/daniel-aleks/hi/Portfolio/src/index.tsx":"1","/home/daniel-aleks/hi/Portfolio/src/reportWebVitals.ts":"2","/home/daniel-aleks/hi/Portfolio/src/App.tsx":"3","/home/daniel-aleks/hi/Portfolio/src/components/technologies/Technologies.tsx":"4","/home/daniel-aleks/hi/Portfolio/src/components/home/Home.tsx":"5","/home/daniel-aleks/hi/Portfolio/src/components/navbar/Navbar.tsx":"6","/home/daniel-aleks/hi/Portfolio/src/components/contact/Contact.tsx":"7","/home/daniel-aleks/hi/Portfolio/src/components/contact/another-way/AnotherWay.tsx":"8","/home/daniel-aleks/hi/Portfolio/src/components/projects/Projects.tsx":"9","/home/daniel-aleks/hi/Portfolio/src/components/contact/ContactComponent.tsx":"10","/home/daniel-aleks/hi/Portfolio/src/components/contact/contact-cards/ContactCards.tsx":"11","/home/daniel-aleks/hi/Portfolio/src/components/projects/horozontal-modal/HorozontalModal.tsx":"12","/home/daniel-aleks/hi/Portfolio/src/components/projects/modals/Modals.tsx":"13","/home/daniel-aleks/hi/Portfolio/src/components/contact/Links.tsx":"14","/home/daniel-aleks/hi/Portfolio/src/components/projects/horozontal-modal/bottom-modal/BottomModal.tsx":"15","/home/daniel-aleks/hi/Portfolio/src/components/projects/modals/mobile-modal/MobileModal.tsx":"16","/home/daniel-aleks/hi/Portfolio/src/components/projects/modals/desktop-modal/DesktopModal.tsx":"17","/home/daniel-aleks/hi/Portfolio/src/components/projects/horozontal-modal/bottom-modal/horz-community-chest/HorzCommunityChest.tsx":"18","/home/daniel-aleks/hi/Portfolio/src/components/projects/horozontal-modal/bottom-modal/toggler/Toggler.tsx":"19","/home/daniel-aleks/hi/Portfolio/src/components/projects/modals/mobile-modal/tech-modal/TechModal.tsx":"20","/home/daniel-aleks/hi/Portfolio/src/components/projects/modals/desktop-modal/details-modal/DetailsModal.tsx":"21","/home/daniel-aleks/hi/Portfolio/src/components/projects/horozontal-modal/bottom-modal/horz-chance/HorzChance.tsx":"22"},{"size":500,"mtime":1620372056138,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1620372056138,"results":"25","hashOfConfig":"24"},{"size":7508,"mtime":1620432883634,"results":"26","hashOfConfig":"24"},{"size":2639,"mtime":1620372056138,"results":"27","hashOfConfig":"24"},{"size":2136,"mtime":1620441640551,"results":"28","hashOfConfig":"24"},{"size":2722,"mtime":1620372056133,"results":"29","hashOfConfig":"24"},{"size":469,"mtime":1620374222463,"results":"30","hashOfConfig":"24"},{"size":1180,"mtime":1620372056132,"results":"31","hashOfConfig":"24"},{"size":3144,"mtime":1620432840888,"results":"32","hashOfConfig":"24"},{"size":1921,"mtime":1620372056132,"results":"33","hashOfConfig":"24"},{"size":2381,"mtime":1620372056132,"results":"34","hashOfConfig":"24"},{"size":604,"mtime":1620372056134,"results":"35","hashOfConfig":"24"},{"size":1066,"mtime":1620372056136,"results":"36","hashOfConfig":"24"},{"size":1116,"mtime":1620372056132,"results":"37","hashOfConfig":"24"},{"size":1999,"mtime":1620372056134,"results":"38","hashOfConfig":"24"},{"size":919,"mtime":1620372056137,"results":"39","hashOfConfig":"24"},{"size":1703,"mtime":1620372056136,"results":"40","hashOfConfig":"24"},{"size":755,"mtime":1620372056135,"results":"41","hashOfConfig":"24"},{"size":532,"mtime":1620372056135,"results":"42","hashOfConfig":"24"},{"size":766,"mtime":1620372056137,"results":"43","hashOfConfig":"24"},{"size":753,"mtime":1620372056136,"results":"44","hashOfConfig":"24"},{"size":632,"mtime":1620372056134,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1y4vt7c",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"48"},"/home/daniel-aleks/hi/Portfolio/src/index.tsx",[],["103","104"],"/home/daniel-aleks/hi/Portfolio/src/reportWebVitals.ts",[],"/home/daniel-aleks/hi/Portfolio/src/App.tsx",["105","106","107"],"/home/daniel-aleks/hi/Portfolio/src/components/technologies/Technologies.tsx",["108","109","110"],"import React, { useState } from 'react'\nimport './technologies.sass'\nimport ReactLogo from '../../assets/images/icons/react-Logo.png'\nimport AngularLogo from '../../assets/images/icons/angular.png'\nimport VueLogo from '../../assets/images/icons/vue.png'\nimport Bulma from '../../assets/images/icons/bulma-logo.png'\nimport Css from '../../assets/images/icons/css.png'\nimport Expo from '../../assets/images/icons/expoLogo.png'\nimport Figma from '../../assets/images/icons/Figma.png'\nimport GA from '../../assets/images/icons/gaLogo.png'\nimport Github from '../../assets/images/icons/github.png'\nimport Html from '../../assets/images/icons/html.png'\nimport Js from '../../assets/images/icons/javascript.png'\nimport Npm from '../../assets/images/icons/npm.png'\nimport Paper from '../../assets/images/icons/paper.png'\nimport Spring from '../../assets/images/icons/react-spring.png'\nimport Redux from '../../assets/images/icons/redux.png'\nimport Sass from '../../assets/images/icons/sassLogo.png'\nimport StyledC from '../../assets/images/icons/styled-Components.png'\nimport Tailwind from '../../assets/images/icons/tailwind.png'\nimport TS from '../../assets/images/icons/typescript.png'\nimport Yarn from '../../assets/images/icons/yarn-logo.png'\nimport BootStrap from '../../assets/images/icons/bootstrap.png'\nimport Netlify from '../../assets/images/icons/netlify.png'\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nfunction Technologies() {\n\n  const iconData = [\n    ReactLogo, AngularLogo, VueLogo, Github, TS, Redux, Sass, BootStrap, Figma, Bulma, Yarn,\n    Paper, GA, Expo, Spring, Css, Html, Js, Npm, StyledC, Tailwind, Netlify\n  ]\n  const nameData = [\n    'React', 'Angular', 'Vue', 'Github', 'Typescript', 'Redux', 'Sass', 'Figma', 'Bulma',\n    'Yarn', 'React-Paper', 'Google-Analytics', 'Expo', 'React-Spring', 'Css', 'Html',\n    'Javascript', 'Npm', 'Styled-Components', 'Tailwind'\n  ]\n\n  return (\n    <div className='tech-container'>\n      <div className=\"coal-bg\" />\n      <div className='green-tech-container' >\n        <Scrollbars style={{ width: '100%', height: '100vh' }}>\n\n          <div className='tech-content-container'>\n            <p className=\"tech-header\">Technologies</p>\n\n            <div className='inner-green-container'>\n              {iconData.map((item, id) =>\n                <div\n                  style={{ animationDelay: `${id * .05}s` }}\n                  className='icon-container'>\n                  <img className=\"icon-image\" src={item} />\n                </div>\n              )}\n            </div>\n          </div>\n        </Scrollbars>\n      </div>\n    </div>\n  )\n}\n\nexport default Technologies\n","/home/daniel-aleks/hi/Portfolio/src/components/home/Home.tsx",["111","112","113","114","115","116","117"],"/home/daniel-aleks/hi/Portfolio/src/components/navbar/Navbar.tsx",["118"],"import React, { useState } from 'react'\nimport './navbar.sass'\nimport { Link } from \"react-router-dom\";\nimport { GiHamburgerMenu } from 'react-icons/gi'\nimport ReactGA from 'react-ga'\n\nfunction Navbar({ setIsNav, isNav, size, isAnimated, setIsAnimated }) {\n\n\n  const onAboutHandler = () => {\n    ReactGA.event({\n      category: 'Route About',\n      action: 'went to route /about'\n    });\n  }\n  const onProjectsHandler = () => {\n    ReactGA.event({\n      category: 'Route Projects',\n      action: 'went to route /projects'\n    });\n  }\n  const onTechHandler = () => {\n    ReactGA.event({\n      category: 'Route Technology',\n      action: 'went to route /tech'\n    });\n  }\n  const onContactHandler = () => {\n    ReactGA.event({\n      category: 'Route Contact',\n      action: 'went to route /contact'\n    });\n  }\n\n  const GaHandler = (id) => {\n    if (id === 1) {\n      onAboutHandler()\n    } else if (id === 2) {\n      onProjectsHandler()\n    } else if (id === 3) {\n      onTechHandler()\n    } else if (id === 4) {\n      onContactHandler()\n    }\n  }\n\n  const closeMobileNav = () => {\n    setIsAnimated(!isAnimated)\n    if (size.width < 900) {\n      if (!isNav) {\n        setIsNav(!isNav)\n      } else\n        setTimeout(() => {\n          setIsNav(!isNav)\n        }, 500)\n    } else setIsNav(isNav)\n  }\n\n  const animationDelayMe = (id) => {\n    if (size.width < 900) {\n      if (isAnimated) {\n        return id * .02\n      } else if (id === 0) {\n        return .1\n      } else if (id === 1) {\n        return .075\n      } else if (id === 2) {\n        return .05\n      } else if (id === 3) {\n        return .025\n      } else if (id === 4) {\n        return 0\n      }\n    } else return id * .1\n  }\n\n  const navItems = [\n    { name: 'Home', to: '/' },\n    { name: 'Projects', to: '/projects' },\n    { name: 'Technologies', to: '/tech' },\n    { name: 'Contact', to: '/contact' }\n  ]\n\n  return (\n    <>\n      {size.width < 900 &&\n        <div className='mobile-nav-container'>\n          <div\n            onClick={closeMobileNav}\n            className='nav-icon-container'\n          >\n            <GiHamburgerMenu\n              onClick={closeMobileNav}\n              size={30} className='navbar-icon'\n            />\n          </div>\n        </div>\n      }\n\n      <nav onClick={closeMobileNav} className='nav-container'>\n        {isNav &&\n          <>\n            {navItems.map((item, id) =>\n              <Link\n                onClick={() => GaHandler(id)}\n                style={{ animationDelay: `${animationDelayMe(id)}s` }}\n                className={isAnimated ? 'nav-item' : 'nav-item-off'}\n                to={item.to}>{item.name}</Link>\n            )}\n          </>\n        }\n      </nav>\n    </>\n  )\n}\n\nexport default Navbar\n","/home/daniel-aleks/hi/Portfolio/src/components/contact/Contact.tsx",["119"],"import ContactCards from './contact-cards/ContactCards';\nimport ContactComponent from './ContactComponent';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport './contact.sass'\n\nfunction Contact() {\n  return (\n    <div id='contact' className='ctt-container'>\n      <div className='contact-image-bg' />\n\n      <ContactCards />\n\n      <div className='contact-form-900px-cancel'>\n        <ContactComponent />\n      </div>\n    </div>\n  )\n}\n\nexport default Contact\n","/home/daniel-aleks/hi/Portfolio/src/components/contact/another-way/AnotherWay.tsx",["120"],"import ContactComponent from '../ContactComponent'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useEffect } from 'react';\nimport { useWindowSize } from '../../../App';\nimport '../contact-cards/contact-cards.sass'\nimport './another-way.sass'\n\nfunction AnotherWay() {\n  const size = useWindowSize()\n  const history = useHistory()\n\n  const goContact = () => history.push('/contact')\n  const stayAnotherWay = () => history.push('/another-way')\n\n  useEffect(() => {\n    size.width > 1100 ? goContact() : stayAnotherWay()\n  }, [size.width])\n\n  return (\n    <div className='other-way-omni-container'>\n      <div className='other-way-bg' />\n\n      <Scrollbars style={{ width: '100%', height: \"100vh\" }}>\n        <div className='other-way-inner-container'>\n          <div className='other-way-container'>\n\n            <ContactComponent />\n\n            <div className=\"other-way-card\">\n              <Link className=\"Link-other-way\" to=\"/contact\">\n                <p>Wrong Way?</p>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </Scrollbars>\n    </div>\n  )\n}\n\nexport default AnotherWay\n","/home/daniel-aleks/hi/Portfolio/src/components/projects/Projects.tsx",["121"],"/home/daniel-aleks/hi/Portfolio/src/components/contact/ContactComponent.tsx",[],"/home/daniel-aleks/hi/Portfolio/src/components/contact/contact-cards/ContactCards.tsx",["122","123"],"import { Link } from \"react-router-dom\";\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useWindowSize } from '../../../App';\nimport ReactGA from 'react-ga'\nimport './contact-cards.sass'\n\nfunction ContactCards() {\n  const size = useWindowSize()\n\n  const onGmailHandler = () => {\n    ReactGA.event({\n      category: 'Card Gmail',\n      action: 'Card Gmail was clicked'\n    });\n  }\n\n  const onGithubHandler = () => {\n    ReactGA.event({\n      category: 'Card Github',\n      action: 'Card Github was clicked'\n    });\n  }\n\n  const anotherWayHandler = () => {\n    ReactGA.event({\n      category: 'AnotherWay Clicked',\n      action: 'Card AnotherWay was clicked'\n    });\n  }\n\n  const GAHandler = (id) => {\n    if (id === 1) {\n      onGmailHandler()\n    } else if (id === 2) {\n      onGithubHandler()\n    }\n  }\n\n  const card = [\n    {\n      title: 'Phone Number:',\n      link: '(503)-997-4024',\n      href: null\n    },\n    {\n      title: 'Gmail:',\n      link: 'daniel.aleksandrov73',\n      href: 'https://mail.google.com/mail/u/0/#search/daniel.aleksandrov73'\n    },\n    {\n      title: 'Github:',\n      link: 'DanielAleks',\n      href: 'https://github.com/DanielAleks'\n    },\n  ]\n\n  const cardDelay = (id) => {\n    if (id === 2) {\n      return (0)\n    } else if (id === 1) {\n      return (.1)\n    } else if (id === 0) {\n      return (.2)\n    }\n  }\n\n  return (\n    <div className='contact-cards-container'>\n\n      <Scrollbars style={{ width: '100vw', height: '100%' }}>\n        <div className='cards-inner-container'>\n          <div className='cards-innermost-container'>\n            {card.map((item, id) =>\n              <a onClick={() => GAHandler(id)} style={{ cursor: id === 0 ? 'auto' : 'pointer' }} href={item.href} target='_blank'>\n                <div style={{ animationDelay: `${cardDelay(id)}s` }} className=\"contact-information\">\n                  <p>{item.title}</p>\n                  <p\n                    style={{ textDecoration: id === 0 ? 'none' : 'underline' }} >{item.link}</p>\n                </div>\n              </a>\n            )}\n\n            <div className=\"another-way-card\">\n              <Link onClick={anotherWayHandler} className='Link-another-styles' to=\"another-way\">\n                <p>Another Way</p>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </Scrollbars>\n    </div>\n  )\n}\n\nexport default ContactCards\n","/home/daniel-aleks/hi/Portfolio/src/components/projects/horozontal-modal/HorozontalModal.tsx",[],"/home/daniel-aleks/hi/Portfolio/src/components/projects/modals/Modals.tsx",["124","125"],"import MobilePopup from './mobile-modal/MobileModal'\nimport DesktopPopup from './desktop-modal/DesktopModal'\nimport './modals.sass'\nimport { useEffect, useState } from 'react'\nimport { useWindowSize } from '../../../App'\n\nfunction Modals({ accessor, images, tech, setTech, details, setDetails, isAnimated, closeModalHandler }) {\n  const size = useWindowSize()\n\n  useEffect(() => {\n    if (size.width < 1130 && size.height < 800) {\n      setDetails(false)\n      setTech(false)\n    }\n  }, [size])\n\n  return (\n    <div className={isAnimated ? 'popup-container' : 'popup-container-off'}>\n      <div className='active-overlay'\n        onClick={closeModalHandler} />\n\n      <MobilePopup\n        size={size}\n        images={images}\n        accessor={accessor}\n        tech={tech}\n        setTech={setTech}\n        setDetails={setDetails}\n      />\n      <DesktopPopup\n        size={size}\n        images={images}\n        accessor={accessor}\n        details={details}\n        setDetails={setDetails}\n        setTech={setTech}\n      />\n    </div >\n  )\n}\n\nexport default Modals\n","/home/daniel-aleks/hi/Portfolio/src/components/contact/Links.tsx",["126"],"import React from 'react'\nimport { AiFillGithub } from 'react-icons/ai'\nimport { CgMail } from 'react-icons/cg'\nimport ReactGA from 'react-ga'\n\nfunction Links() {\n\n  const onGmailHandler = () => {\n    ReactGA.event({\n      category: 'Contact-Gmail',\n      action: 'went to my gmail'\n    });\n  }\n\n  const onGithubHandler = () => {\n    ReactGA.event({\n      category: 'Contact-Github',\n      action: 'went to my github'\n    });\n  }\n\n  const links = [\n    {\n      icon: CgMail,\n      delay: 0,\n      handler: onGmailHandler,\n      href: 'https://mail.google.com/mail/u/0/#search/daniel.aleksandrov73'\n    },\n    {\n      icon: AiFillGithub,\n      delay: 100,\n      handler: onGithubHandler,\n      href: 'https://github.com/DanielAleks'\n\n    }\n  ]\n\n  return (\n    <div style={{animationDelay: '.4s'}} className='links'>\n      {links.map((item) =>\n        <a data-aos=\"fade-up\"\n          data-aos-delay={item.delay}\n          onClick={item.handler}\n          href={item.href}\n          target='_blank' className='link-margin'>\n          <item.icon size={30} />\n        </a>\n      )}\n    </div>\n  )\n}\n\nexport default Links\n","/home/daniel-aleks/hi/Portfolio/src/components/projects/horozontal-modal/bottom-modal/BottomModal.tsx",["127","128"],"import React, { useState } from 'react'\nimport HorzChance from './horz-chance/HorzChance'\nimport HorzCommunityChest from './horz-community-chest/HorzCommunityChest'\nimport Toggler from './toggler/Toggler'\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './bottom-modal.sass'\n\nfunction BottomModal({ images, accessor, tech, setTech, details, setDetails }) {\n  const [isM, setIsM] = useState(false)\n  const [Z, setZ] = useState<number>(0)\n\n  var mobileSettings = {\n    dots: true,\n    arrows: false,\n    infinite: true,\n    autoplaySpeed: 2000,\n    autoplay: true,\n    speed: 1000,\n    slidesToShow: 2,\n    slidesToScroll: 2\n  };\n\n  var desktopSettings = {\n    dots: true,\n    arrows: false,\n    autoplay: true,\n    autoplaySpeed: 2000,\n    infinite: true,\n    speed: 1000,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <div className='bottom-modal-container'>\n      <div className='bottom-popup-container'>\n\n        <Toggler isM={isM} setIsM={setIsM} />\n\n        {isM &&\n          <Slider className='bottom-carousel-container' {...mobileSettings}>\n            {isM && images[accessor].mobile.map((item) =>\n              <div>\n                <img className=\"mobile-image\" src={item} />\n              </div>\n            )}\n          </Slider>}\n\n        {!isM &&\n          <Slider className='bottom-carousel-container' {...desktopSettings}>\n            {images[accessor].desktop.map((item) =>\n              <div className='poopsy' >\n                <img className=\"desktop-image\" src={item} />\n              </div>\n            )}\n          </Slider>}\n\n      </div >\n\n      <HorzChance\n        tech={tech}\n        setTech={setTech}\n        images={images}\n        accessor={accessor}\n      />\n      <HorzCommunityChest\n        details={details}\n        setDetails={setDetails}\n        Z={Z} setZ={setZ}\n        images={images}\n        accessor={accessor} />\n    </div >\n  )\n}\n\nexport default BottomModal\n","/home/daniel-aleks/hi/Portfolio/src/components/projects/modals/mobile-modal/MobileModal.tsx",["129","130"],"import { Scrollbars } from 'react-custom-scrollbars';\nimport './mobile-modal.sass'\nimport TechModal from './tech-modal/TechModal';\n\nfunction MobilePopup({ accessor, images, tech, setTech, setDetails, size }) {\n  return (\n    <div className='mobile-outer-popup-container'>\n      <div className='mobile-popup-container'>\n        <Scrollbars style={{ width: size.width > 1300 ? 260 : 210, height: \"100%\" }}>\n          {images[accessor].mobile.map((item) =>\n            <img className='mobile-popup-image' src={item} />\n          )}\n        </Scrollbars>\n      </div>\n\n      <a href={images[accessor].repo} target='_blank'>\n        <button className='b-view-repo'>\n          <p>View Repo</p>\n        </button>\n      </a>\n\n      <TechModal\n        tech={tech}\n        setTech={setTech}\n        setDetails={setDetails}\n        images={images}\n        accessor={accessor}\n      />\n    </div>\n  )\n}\n\nexport default MobilePopup\n","/home/daniel-aleks/hi/Portfolio/src/components/projects/modals/desktop-modal/DesktopModal.tsx",["131","132"],"import { Scrollbars } from 'react-custom-scrollbars';\nimport ReactGA from 'react-ga'\nimport DetailsModal from './details-modal/DetailsModal';\nimport './desktop-modal.sass'\n\nfunction DesktopPopup({ accessor, images, details, setDetails, setTech, size }) {\n\n  const visitHandler = () => {\n    switch (accessor) {\n      case 0:\n        ReactGA.event({ category: 'Visited WeatherApp', action: 'clicked on visit in weather modal' }); break;\n      case 1:\n        ReactGA.event({ category: 'Visited WildlifeApp', action: 'clicked on visit in wildlife modal' }); break;\n      case 2:\n        ReactGA.event({ category: 'Visited BluberryApp', action: 'clicked on visit in blueberry modal' }); break;\n      case 3:\n        ReactGA.event({ category: 'Visited MeditationApp', action: 'clicked on visit in meditation modal' }); break;\n      default:\n        ReactGA.event({ category: 'Visited Site', action: 'clicked on visit in modal' });\n    }\n  }\n\n  return (\n    <div className='desktop-outer-popup-container'>\n      <div className='desktop-popup-container'>\n        <Scrollbars style={{ width: size.width > 1300 ? 460 : 395, height: \"100%\" }}>\n          {images[accessor].desktop.map((item, id) =>\n            <img style={{ animationDelay: `${id * .1}s` }} src={item} />\n          )}\n        </Scrollbars>\n      </div>\n\n      <a href={images[accessor].website} onClick={visitHandler} target='_blank'>\n        <button className='b-visit-site'>\n          <p>Visit Site</p>\n        </button>\n      </a>\n\n      <DetailsModal\n        images={images}\n        accessor={accessor}\n        details={details}\n        setDetails={setDetails}\n        setTech={setTech}\n      />\n    </div>\n  )\n}\n\nexport default DesktopPopup\n","/home/daniel-aleks/hi/Portfolio/src/components/projects/horozontal-modal/bottom-modal/horz-community-chest/HorzCommunityChest.tsx",[],"/home/daniel-aleks/hi/Portfolio/src/components/projects/horozontal-modal/bottom-modal/toggler/Toggler.tsx",[],"/home/daniel-aleks/hi/Portfolio/src/components/projects/modals/mobile-modal/tech-modal/TechModal.tsx",["133"],"import { useWindowSize } from '../../../../../App'\nimport './tech-modal.sass'\n\nfunction TechModal({ images, accessor, tech, setTech, setDetails }) {\n  const size = useWindowSize()\n\n  const techHandler = () => {\n    if (size.width < 1130 && size.height < 800) {\n      setTech(!tech)\n      setDetails(false)\n    } else\n      setTech(!tech)\n  }\n\n  return (\n    <div className={`'view-tech-container' ${tech ? 'tech-show' : 'tech-hide'}`}>\n      <div className='popup-tech'>\n        <p>Technologies</p>\n        {images[accessor].icons.map((item, id) =>\n          <img className=\"tech-icons\" src={item} />\n        )}\n      </div>\n\n      <button onClick={techHandler} className='b-view-tech'>\n        <p>Tech</p>\n      </button>\n    </div>\n  )\n}\n\nexport default TechModal\n","/home/daniel-aleks/hi/Portfolio/src/components/projects/modals/desktop-modal/details-modal/DetailsModal.tsx",[],"/home/daniel-aleks/hi/Portfolio/src/components/projects/horozontal-modal/bottom-modal/horz-chance/HorzChance.tsx",["134"],"import './horz-chance.sass'\n\nfunction HorzChance({ images, accessor, tech, setTech }) {\n\n  return (\n    <div\n      className={`'h-view-tech-container' ${tech ? 'h-tech-show' : 'h-tech-hide'}`}>\n      <button onClick={() => setTech(!tech)} className='hb-view-tech'>\n        <p>Tech</p>\n      </button>\n\n      <div className='h-popup-tech'>\n        <p>Technologies</p>\n        {images[accessor].icons.map((item, id) =>\n          <img className=\"h-tech-icons\" src={item} />\n        )}\n        <a href={images[accessor].repo}>\n          <button>View Repo</button>\n        </a>\n      </div>\n\n\n    </div>\n  )\n}\n\nexport default HorzChance\n",{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":34,"column":8,"nodeType":"141","messageId":"142","endLine":34,"endColumn":19},{"ruleId":"139","severity":1,"message":"143","line":37,"column":8,"nodeType":"141","messageId":"142","endLine":37,"endColumn":19},{"ruleId":"139","severity":1,"message":"144","line":43,"column":50,"nodeType":"141","messageId":"142","endLine":43,"endColumn":54},{"ruleId":"139","severity":1,"message":"145","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"146","line":33,"column":9,"nodeType":"141","messageId":"142","endLine":33,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":53,"column":19,"nodeType":"149","endLine":53,"endColumn":60},{"ruleId":"139","severity":1,"message":"150","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":22,"column":6,"nodeType":"153","endLine":22,"endColumn":8,"suggestions":"154"},{"ruleId":"139","severity":1,"message":"155","line":24,"column":9,"nodeType":"141","messageId":"142","endLine":24,"endColumn":23},{"ruleId":"147","severity":1,"message":"148","line":44,"column":13,"nodeType":"149","endLine":47,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":48,"column":13,"nodeType":"149","endLine":48,"endColumn":62},{"ruleId":"147","severity":1,"message":"148","line":52,"column":13,"nodeType":"149","endLine":55,"endColumn":15},{"ruleId":"147","severity":1,"message":"148","line":56,"column":13,"nodeType":"149","endLine":56,"endColumn":64},{"ruleId":"139","severity":1,"message":"145","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"156","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":20},{"ruleId":"151","severity":1,"message":"157","line":18,"column":6,"nodeType":"153","endLine":18,"endColumn":18,"suggestions":"158"},{"ruleId":"147","severity":1,"message":"148","line":93,"column":17,"nodeType":"149","endLine":95,"endColumn":37},{"ruleId":"139","severity":1,"message":"159","line":8,"column":9,"nodeType":"141","messageId":"142","endLine":8,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":74,"column":115,"nodeType":"162","endLine":74,"endColumn":130},{"ruleId":"139","severity":1,"message":"145","line":4,"column":21,"nodeType":"141","messageId":"142","endLine":4,"endColumn":29},{"ruleId":"151","severity":1,"message":"163","line":15,"column":6,"nodeType":"153","endLine":15,"endColumn":12,"suggestions":"164"},{"ruleId":"160","severity":1,"message":"161","line":45,"column":11,"nodeType":"162","endLine":45,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":46,"column":17,"nodeType":"149","endLine":46,"endColumn":60},{"ruleId":"147","severity":1,"message":"148","line":55,"column":17,"nodeType":"149","endLine":55,"endColumn":61},{"ruleId":"147","severity":1,"message":"148","line":11,"column":13,"nodeType":"149","endLine":11,"endColumn":62},{"ruleId":"160","severity":1,"message":"161","line":16,"column":39,"nodeType":"162","endLine":16,"endColumn":54},{"ruleId":"147","severity":1,"message":"148","line":28,"column":13,"nodeType":"149","endLine":28,"endColumn":73},{"ruleId":"160","severity":1,"message":"161","line":33,"column":65,"nodeType":"162","endLine":33,"endColumn":80},{"ruleId":"147","severity":1,"message":"148","line":20,"column":11,"nodeType":"149","endLine":20,"endColumn":52},{"ruleId":"147","severity":1,"message":"148","line":15,"column":11,"nodeType":"149","endLine":15,"endColumn":54},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"@typescript-eslint/no-unused-vars","'Transparent' is defined but never used.","Identifier","unusedVar","'AngularLogo' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'nameData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DesktopBg' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAccessor'. Either include it or remove the dependency array. If 'setAccessor' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["167"],"'projectHandler' is assigned a value but never used.","'Scrollbars' is defined but never used.","React Hook useEffect has missing dependencies: 'goContact' and 'stayAnotherWay'. Either include them or remove the dependency array.",["168"],"'size' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","React Hook useEffect has missing dependencies: 'setDetails' and 'setTech'. Either include them or remove the dependency array. If 'setDetails' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [setAccessor]",{"range":"176","text":"177"},"Update the dependencies array to be: [goContact, size.width, stayAnotherWay]",{"range":"178","text":"179"},"Update the dependencies array to be: [setDetails, setTech, size]",{"range":"180","text":"181"},[937,939],"[setAccessor]",[592,604],"[goContact, size.width, stayAnotherWay]",[487,493],"[setDetails, setTech, size]"]