[{"C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\projects\\Projects.tsx":"1","C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\App.tsx":"2","C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\contact\\contact-cards\\ContactCards.tsx":"3","C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\navbar\\Navbar.tsx":"4","C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\index.tsx":"5","C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\technologies\\Technologies.tsx":"6","C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\about\\About.tsx":"7","C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\projects\\modals\\mobile-modal\\chance\\Chance.tsx":"8","C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\contact\\another-way\\AnotherWay.tsx":"9"},{"size":8287,"mtime":1618475418231,"results":"10","hashOfConfig":"11"},{"size":2192,"mtime":1618475500667,"results":"12","hashOfConfig":"11"},{"size":2918,"mtime":1618507498022,"results":"13","hashOfConfig":"11"},{"size":2877,"mtime":1618535476918,"results":"14","hashOfConfig":"11"},{"size":500,"mtime":1613792448371,"results":"15","hashOfConfig":"11"},{"size":2617,"mtime":1618542478698,"results":"16","hashOfConfig":"11"},{"size":1023,"mtime":1618038365852,"results":"17","hashOfConfig":"11"},{"size":1082,"mtime":1618183413914,"results":"18","hashOfConfig":"11"},{"size":1349,"mtime":1618509299420,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"t3z8zm",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\projects\\Projects.tsx",["42","43"],"import React, { useState } from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Meditation1D from '../../assets/images/meditation/desktop/meditation1.jpg'\r\nimport Meditation2D from '../../assets/images/meditation/desktop/meditation2.jpg'\r\nimport Meditation3D from '../../assets/images/meditation/desktop/meditation3.jpg'\r\nimport Meditation1M from '../../assets/images/meditation/mobile/meditation1.png'\r\nimport Meditation2M from '../../assets/images/meditation/mobile/meditation2.png'\r\nimport Meditation3M from '../../assets/images/meditation/mobile/meditation3.png'\r\nimport BBHomeD from '../../assets/images/blueberries/desktop/homeD.png'\r\nimport BBBenefitsD from '../../assets/images/blueberries/desktop/benefitsD.png'\r\nimport BBFreezingD from '../../assets/images/blueberries/desktop/freezingD.png'\r\nimport BBRecipesD from '../../assets/images/blueberries/desktop/recipesD.png'\r\nimport BBRecipesModalD from '../../assets/images/blueberries/desktop/recipesModalD.png'\r\nimport BBBenefitsM from '../../assets/images/blueberries/mobile/benefitsM.png'\r\nimport BBFreezingM from '../../assets/images/blueberries/mobile/freezingM.png'\r\nimport BBHomeM from '../../assets/images/blueberries/mobile/homeM.png'\r\nimport BBRecipesM from '../../assets/images/blueberries/mobile/recipesM.png'\r\nimport BBRecipesModalM from '../../assets/images/blueberries/mobile/recipesModalM.png'\r\nimport AfghanistanD from '../../assets/images/weather/desktop/afghanistanD.png'\r\nimport CaliD from '../../assets/images/weather/desktop/caliD.png'\r\nimport JapanD from '../../assets/images/weather/desktop/japanD.png'\r\nimport AfghanistanM from '../../assets/images/weather/mobile/afghanistanM.png'\r\nimport CaliM from '../../assets/images/weather/mobile/caliM.png'\r\nimport JapanM from '../../assets/images/weather/mobile/japanM.png'\r\nimport WLHomeD from '../../assets/images/wildlife/desktop/homeD.png'\r\nimport WLArticlesD from '../../assets/images/wildlife/desktop/articlesD.png'\r\nimport WLGalleryD from '../../assets/images/wildlife/desktop/galleryD.png'\r\nimport WLHomeBottomD from '../../assets/images/wildlife/desktop/homeBottomD.png'\r\nimport WLHomeM from '../../assets/images/wildlife/mobile/homeM.png'\r\nimport WLArticlesM from '../../assets/images/wildlife/mobile/articlesM.png'\r\nimport WLGalleryM from '../../assets/images/wildlife/mobile/galleryM.png'\r\nimport WLHomeBottomM from '../../assets/images/wildlife/mobile/homeBottomM.png'\r\nimport ReactLogo from '../../assets/images/icons/react-Logo.png'\r\nimport VueLogo from '../../assets/images/icons/vue.png'\r\nimport AngularLogo from '../../assets/images/icons/angular.png'\r\nimport Sass from '../../assets/images/icons/sassLogo.png'\r\nimport Figma from '../../assets/images/icons/Figma.png'\r\nimport StyledC from '../../assets/images/icons/styled-Components.png'\r\nimport Css from '../../assets/images/icons/css.png'\r\nimport Spring from '../../assets/images/icons/react-spring.png'\r\nimport './projects.sass'\r\nimport Modals from './modals/Modals'\r\nimport HorozontalModal from './horozontal-modal/HorozontalModal'\r\nimport { useWindowSize } from '../../App'\r\nimport ReactGA from 'react-ga'\r\n\r\nconst images: any = [\r\n  {\r\n    main: JapanD,\r\n    desktop: [JapanD, CaliD, AfghanistanD],\r\n    mobile: [JapanM, CaliM, AfghanistanM],\r\n    title: 'QuickWeather',\r\n    desc: 'A simple weather app that keeps information on the weather up to date. Wanting to do more complex things with react, I fetched data from an API and focused on client-side functionality.',\r\n    icons: [Sass, ReactLogo, Figma],\r\n    website: 'https://daniel-aleksandrov-quickweather.netlify.app/',\r\n    repo: 'https://github.com/DanielAleks/weather-app'\r\n  },\r\n  {\r\n    main: WLHomeD,\r\n    desktop: [WLHomeD, WLHomeBottomD, WLArticlesD, WLGalleryD],\r\n    mobile: [WLHomeM, WLHomeBottomM, WLArticlesM, WLGalleryM],\r\n    title: 'Save Wildlife',\r\n    desc: 'List of endangered species that need our help. I used an animal conservation API. The API has since been removed and I had to add my own data, unfortunately.',\r\n    icons: [Sass, ReactLogo, Figma, Spring],\r\n    website: 'https://daniel-aleksandrov-savewildlife.netlify.app/',\r\n    repo: 'https://github.com/DanielAleks/save-wildlife'\r\n  },\r\n  {\r\n    main: BBHomeD,\r\n    desktop: [BBHomeD, BBRecipesD, BBFreezingD, BBBenefitsD, BBRecipesModalD],\r\n    mobile: [BBHomeM, BBRecipesM, BBFreezingM, BBBenefitsM, BBRecipesModalM],\r\n    title: 'Blueberry Tribute',\r\n    desc: 'A tribute to the most glorious and yummiest fruit out there! Displays a few recipes made with blueberries, instructions on how to freeze blueberries properly, and the health benefits of them.',\r\n    icons: [Sass, VueLogo, Figma],\r\n    website: 'https://daniel-aleksandrov-blueberrytribute.netlify.app/',\r\n    repo: 'https://github.com/DanielAleks/Blueberry-Tribute'\r\n  },\r\n  {\r\n    main: Meditation1D,\r\n    desktop: [Meditation1D, Meditation2D, Meditation3D],\r\n    mobile: [Meditation1M, Meditation2M, Meditation3M],\r\n    title: 'Meditation App',\r\n    desc: 'Exhibits helpful meditations to the stressed. Primarily focused on UX design; responsiveness, simple animations with an animation library (AOS), and a little bit of React with a React carousel library.',\r\n    icons: [Css, ReactLogo, Figma, StyledC],\r\n    website: 'https://daniel-aleksandrov-meditation.netlify.app/',\r\n    repo: 'https://github.com/DanielAleks/metta',\r\n  },\r\n]\r\n\r\nfunction Projects() {\r\n  const size = useWindowSize()\r\n  const [active, setActive] = useState(false)\r\n  const [accessor, setAccessor] = useState(0)\r\n  const [isAnimated, setIsAnimated] = useState(false)\r\n  const [tech, setTech] = useState(false)\r\n  const [details, setDetails] = useState(false)\r\n\r\n  const openModal = (id): any => {\r\n    setActive(!active)\r\n    setAccessor(id)\r\n    setIsAnimated(true)\r\n    if (id === 0) {\r\n      weatherApp()\r\n    } else if (id === 1) {\r\n      wildlifeApp()\r\n    } else if (id === 2) {\r\n      blueberryApp()\r\n    } else if (id === 3) {\r\n      meditationApp()\r\n    }\r\n  }\r\n\r\n  const weatherApp = () => {\r\n    ReactGA.event({\r\n      category: 'weatherApp',\r\n      action: 'opened weatherApp modal'\r\n    });\r\n  }\r\n  const wildlifeApp = () => {\r\n    ReactGA.event({\r\n      category: 'wildlifeApp',\r\n      action: 'opened meditation modal'\r\n    });\r\n  }\r\n  const blueberryApp = () => {\r\n    ReactGA.event({\r\n      category: 'blueberryApp',\r\n      action: 'opened blueberryApp modal'\r\n    });\r\n  }\r\n  const meditationApp = () => {\r\n    ReactGA.event({\r\n      category: 'meditationApp',\r\n      action: 'opened meditationApp modal'\r\n    });\r\n  }\r\n\r\n\r\n  const imageAnimationHandler = (id) => {\r\n    if (size.width > 900) {\r\n      if (id === 0) {\r\n        return .2\r\n      } else if (id === 1) {\r\n        return .1\r\n      } else if (id === 2) {\r\n        return .4\r\n      } else if (id === 3) {\r\n        return .3\r\n      }\r\n    } else if (id === 0) {\r\n      return .4\r\n    } else if (id === 1) {\r\n      return .3\r\n    } else if (id === 2) {\r\n      return .2\r\n    } else if (id === 3) {\r\n      return .1\r\n    }\r\n  }\r\n\r\n  const closeModalHandler = () => {\r\n    setIsAnimated(false)\r\n    setTimeout(() => {\r\n      setActive(false);\r\n    }, 500)\r\n  }\r\n\r\n  return (\r\n    <div className=\"project-container\">\r\n      <div className='project-city-bg' />\r\n      <Scrollbars style={{ width: '100%', height: '100%' }}>\r\n        <div className='main-images'>\r\n          {images.map((item, id) =>\r\n            <img\r\n              style={{ animationDelay: `${imageAnimationHandler(id)}s` }}\r\n              onClick={() => openModal(id)}\r\n              src={item.main} />\r\n          )}\r\n        </div>\r\n      </Scrollbars>\r\n\r\n      {active &&\r\n        <Modals\r\n          closeModalHandler={closeModalHandler}\r\n          isAnimated={isAnimated}\r\n          tech={tech}\r\n          setTech={setTech}\r\n          details={details}\r\n          setDetails={setDetails}\r\n          accessor={accessor}\r\n          images={images}\r\n        />\r\n      }\r\n\r\n      {active &&\r\n        <HorozontalModal\r\n          closeModalHandler={closeModalHandler}\r\n          isAnimated={isAnimated}\r\n          tech={tech}\r\n          setTech={setTech}\r\n          details={details}\r\n          setDetails={setDetails}\r\n          accessor={accessor}\r\n          images={images}\r\n        />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n",["44","45"],"C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\App.tsx",["46"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport './components/style.sass'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Technologies from './components/technologies/Technologies';\nimport Projects from './components/projects/Projects';\nimport About from './components/about/About';\nimport Contact from './components/contact/Contact';\nimport Home from './components/home/Home';\nimport Navbar from './components/navbar/Navbar';\nimport AnotherWay from './components/contact/another-way/AnotherWay';\nimport ReactGa from 'react-ga';\n\nexport function useWindowSize() {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nfunction App() {\n  const size = useWindowSize()\n  const [isNav, setIsNav] = useState(false)\n  const [isAnimated, setIsAnimated] = useState(false)\n\n  useEffect(() => {\n    size.width <= 900 ? setIsNav(false) : setIsNav(true)\n  }, [size.width])\n\n  useEffect(() => {\n    ReactGa.initialize('UA-190747385-1')\n    ReactGa.pageview('/')\n  }, []);\n\n  return (\n    <Router>\n      <div>\n        <Navbar\n          isAnimated={isAnimated}\n          setIsAnimated={setIsAnimated}\n          setIsNav={setIsNav}\n          isNav={isNav} size={size}\n        />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/projects\">\n            <Projects />\n          </Route>\n          <Route path=\"/tech\">\n            <Technologies />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/another-way\">\n            <AnotherWay />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n// <Main />\n\nexport default App;\n",["47","48"],"C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\contact\\contact-cards\\ContactCards.tsx",["49","50","51","52"],"C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\navbar\\Navbar.tsx",["53"],"C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\index.tsx",[],"C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\technologies\\Technologies.tsx",["54","55","56","57"],"C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\about\\About.tsx",[],"C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\projects\\modals\\mobile-modal\\chance\\Chance.tsx",["58","59","60","61"],"C:\\Users\\denni\\Documents\\code\\React\\portfolio\\src\\components\\contact\\another-way\\AnotherWay.tsx",["62","63"],{"ruleId":"64","severity":1,"message":"65","line":35,"column":8,"nodeType":"66","messageId":"67","endLine":35,"endColumn":19},{"ruleId":"68","severity":1,"message":"69","line":174,"column":13,"nodeType":"70","endLine":177,"endColumn":33},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"64","severity":1,"message":"75","line":8,"column":3,"nodeType":"66","messageId":"67","endLine":8,"endColumn":7},{"ruleId":"71","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"64","severity":1,"message":"78","line":12,"column":9,"nodeType":"66","messageId":"67","endLine":12,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":84,"column":115,"nodeType":"81","endLine":84,"endColumn":130},{"ruleId":"68","severity":1,"message":"69","line":85,"column":17,"nodeType":"70","endLine":85,"endColumn":64},{"ruleId":"68","severity":1,"message":"69","line":95,"column":15,"nodeType":"70","endLine":95,"endColumn":35},{"ruleId":"64","severity":1,"message":"82","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"83","line":26,"column":10,"nodeType":"66","messageId":"67","endLine":26,"endColumn":19},{"ruleId":"64","severity":1,"message":"84","line":26,"column":21,"nodeType":"66","messageId":"67","endLine":26,"endColumn":33},{"ruleId":"64","severity":1,"message":"85","line":32,"column":9,"nodeType":"66","messageId":"67","endLine":32,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":52,"column":19,"nodeType":"70","endLine":52,"endColumn":60},{"ruleId":"64","severity":1,"message":"82","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":23,"column":9,"nodeType":"70","endLine":23,"endColumn":49},{"ruleId":"68","severity":1,"message":"69","line":26,"column":11,"nodeType":"70","endLine":26,"endColumn":52},{"ruleId":"68","severity":1,"message":"69","line":31,"column":9,"nodeType":"70","endLine":31,"endColumn":32},{"ruleId":"86","severity":1,"message":"87","line":19,"column":6,"nodeType":"88","endLine":19,"endColumn":18,"suggestions":"89"},{"ruleId":"68","severity":1,"message":"69","line":32,"column":17,"nodeType":"70","endLine":32,"endColumn":37},"@typescript-eslint/no-unused-vars","'AngularLogo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'Link' is defined but never used.",["90"],["91"],"'size' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useState' is defined but never used.","'isDisplay' is assigned a value but never used.","'setIsDisplay' is assigned a value but never used.","'nameData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'goContact' and 'stayAnotherWay'. Either include them or remove the dependency array.","ArrayExpression",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [goContact, size.width, stayAnotherWay]",{"range":"95","text":"96"},[680,692],"[goContact, size.width, stayAnotherWay]"]